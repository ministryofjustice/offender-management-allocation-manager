---
# Default values.
# Declare variables to be passed into your templates.
#
# Variables in `helm_deploy/values-[env].yaml` will take precedence.

custom_templates_config:
  rails_db_migration:
    enabled: true
  background_jobs_processor:
    enabled: true
  domain_events_consumer:
    enabled: true
  prometheus_exporter:
    enabled: true

  # One grafana dashboard covers all namespaces, so only needs
  # to be applied in one environment, usually `staging`
  grafana_dashboard:
    enabled: false

# IMPORTANT: `staging` and `preprod` turn off RDS instance for cost savings
# between 10:00 PM - 6:00 AM, so any cronjobs running on those environments
# that require DB access must be scheduled outside this downtime window.
# Additionally, none of these cronjobs should run in `test` environment.
cronjobs:
  integration_tests_cleanup:
    enabled: false # should only be enabled in `staging`
    schedule: 15 6 * * *
  process_movements:
    enabled: false
    schedule: 30 6 * * *
  recalculate_handover_dates:
    enabled: false
    schedule: 45 6 * * *
  community_api_import:
    enabled: false
    schedule: 0 7 * * *
  parole_data_import:
    enabled: false
    schedule: 0 8 * * *
  mailbox_register_import:
    enabled: false
    schedule: 0 9 * * *
  # Below cronjobs are currently only enabled in production
  deactivate_cnls:
    enabled: false
  early_allocation_suitability_email:
    enabled: false
  handover_email:
    enabled: false
  handover_chase_email:
    enabled: false
  handover_reminder_email:
    enabled: false

cronjob_resources:
  limits:
    memory: 1500Mi
    cpu: 1000m
  requests:
    memory: 500Mi
    cpu: 100m

generic-prometheus-alerts:
  targetApplication: offender-management
  hpaTargetOverride: ".*"
  podTargetOverride: ".*"
  deploymentTargetOverride: ".*"
  applicationCronJobStatusFailedWindowMinutes: 60
  sqsAlertsOldestThreshold: 45 # minutes
  sqsAlertsTotalMessagesThreshold: "0" # DLQ alert triggers if messages > 0

generic-service:
  replicaCount: 2

  nameOverride: offender-management
  serviceAccountName: offender-management-allocation-manager
  productId: DPS030

  containerCommand: ['sh', '-c', 'bundle exec puma']

  image:
    repository: quay.io/hmpps/offender-management
    tag: app_version # overridden at deployment time
    port: 3000

  service:
    port: 3000

  ingress:
    enabled: true

  # https://github.com/ministryofjustice/hmpps-ip-allowlists/blob/main/ip-allowlist-groups.yaml
  allowlist:
    groups:
      - digital_staff_and_mojo
      - moj_cloud_platform
      - prisons
      - private_prisons

  livenessProbe:
    httpGet:
      path: /health/ping
    periodSeconds: 60

  readinessProbe:
    httpGet:
      path: /health/ping
    periodSeconds: 60

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 40%

  podSecurityContext:
    fsGroup: 1001

  resources:
    limits:
      memory: 1500Mi
      cpu: 1000m
    requests:
      memory: 500Mi
      cpu: 50m

  # Environment variables to load into the deployment
  env:
    RAILS_ENV: production
    RAILS_MAX_THREADS: 5 # number of Puma threads
    RAILS_LOG_TO_STDOUT: on
    RAILS_SERVE_STATIC_FILES: on
    PROMETHEUS_METRICS: "on" # do not remove quotes!
    PROMETHEUS_EXPORTER_HOST: offender-management-prometheus-exporter
    LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libjemalloc.so

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]
  namespace_secrets:
    allocation-manager-secrets:
      SECRET_KEY_BASE: SECRET_KEY_BASE
      SENTRY_DSN: SENTRY_DSN
      KEYWORKER_API_HOST: KEYWORKER_API_HOST
      GOVUK_NOTIFY_API_KEY: GOVUK_NOTIFY_API_KEY
      SUPPORT_EMAIL: SUPPORT_EMAIL
    hmpps-auth-secrets:
      HMPPS_API_CLIENT_ID: HMPPS_API_CLIENT_ID
      HMPPS_API_CLIENT_SECRET: HMPPS_API_CLIENT_SECRET
      HMPPS_OAUTH_CLIENT_ID: HMPPS_OAUTH_CLIENT_ID
      HMPPS_OAUTH_CLIENT_SECRET: HMPPS_OAUTH_CLIENT_SECRET
    domain-events:
      DOMAIN_EVENTS_SQS_DLQ_ARN: DOMAIN_EVENTS_SQS_DLQ_ARN
      DOMAIN_EVENTS_SQS_DLQ_NAME: DOMAIN_EVENTS_SQS_DLQ_NAME
      DOMAIN_EVENTS_SQS_DLQ_URL: DOMAIN_EVENTS_SQS_DLQ_URL
      DOMAIN_EVENTS_SQS_QUEUE_ARN: DOMAIN_EVENTS_SQS_QUEUE_ARN
      DOMAIN_EVENTS_SQS_QUEUE_NAME: DOMAIN_EVENTS_SQS_QUEUE_NAME
      DOMAIN_EVENTS_SQS_QUEUE_URL: DOMAIN_EVENTS_SQS_QUEUE_URL
    allocation-rds-instance-output:
      POSTGRES_HOST: rds_instance_address
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_NAME: postgres_name
    allocation-elasticache-redis:
      REDIS_URL: url
    hmpps-domain-events-topic:
      DOMAIN_EVENTS_TOPIC_ARN: topic_arn
    s3-bucket-output:
      S3_BUCKET_NAME: bucket_name
    offender-management-allocation-manager:
      APPINSIGHTS_INSTRUMENTATIONKEY: APPINSIGHTS_INSTRUMENTATIONKEY
