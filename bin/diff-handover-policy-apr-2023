#!/usr/bin/env ruby

raise 'Run it with "bin/rails runner", not on its own' unless Object.constants.include?(:Rails)

file = ARGV.fetch(0)

CSV.open(file, 'wb') do |csv|
  h0 = []
  h1 = []

  h0.push ''
  h1.push 'NOMS No'

  h0.push ''
  h1.push 'Prison'

  h0.push ''
  h1.push 'Sentence start date'

  h0.push ''
  h1.push 'Case type'

  h0.push 'OLD Earliest release'
  h1.push 'Date'
  h0.push ''
  h1.push 'Type'
  h0.push ''
  h1.push 'Handover start date'
  h0.push 'OLD'
  h1.push 'Handover date'
  h0.push ''
  h1.push 'Responsibility'

  h0.push 'NEW Earliest release'
  h1.push 'Date'
  h0.push ''
  h1.push 'Type'
  h0.push ''
  h1.push 'Handover start date'
  h0.push 'NEW'
  h1.push 'Handover date'
  h0.push ''
  h1.push 'Responsibility'

  csv.add_row(h0)
  csv.add_row(h1)
  Prison.all.each do |prison|
    offenders = prison.offenders

    offenders.each do |o|
      begin
        oldchd = HandoverDateService.handover(o)
        newchd = HandoverDateService.handover_2(o)

        newerd = Handover::HandoverCalculation.calculate_earliest_release(
          is_indeterminate: o.indeterminate_sentence?,
          tariff_date: o.tariff_date,
          parole_review_date: o.parole_review_date,
          parole_eligibility_date: o.parole_eligibility_date,
          automatic_release_date: o.automatic_release_date,
          conditional_release_date: o.conditional_release_date,
        )

        old = [
          o.earliest_release_for_handover&.date&.iso8601,
          o.earliest_release_for_handover&.name,
          oldchd.start_date&.iso8601,
          oldchd.handover_date&.iso8601,
          oldchd.responsibility,
        ]

        new = [
          newerd&.date&.iso8601,
          newerd&.name,
          newchd.start_date&.iso8601,
          newchd.handover_date&.iso8601,
          newchd.responsibility,
        ]

        if old != new
          csv.add_row([
                        o.offender_no,
                        prison.code,
                        o.sentence_start_date,

                        (!o.nps_case? && !o.indeterminate_sentence?) ? 'CRC' : 'NPS',

                        *old,
                        *new,
                      ])
        end
      end
    rescue
      warn "Error with #{o.offender_no}"
      raise
    end
  end
end
